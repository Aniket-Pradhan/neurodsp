.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_tutorials_rhythm_plot_LaggedCoherence.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_rhythm_plot_LaggedCoherence.py:


Lagged Coherence
================

Compute lagged coherence on neural signals.

This tutorial primarily covers :mod:`neurodsp.rhythm.laggedcoherence`.


Overview
--------

Lagged coherence is a measure to quantify the rhythmicity of neural signals.

For more details on the lagged coherence measure see Fransen et al., 2015, Neuroimage.




.. code-block:: python


    import numpy as np

    from neurodsp.rhythm import compute_lagged_coherence
    from neurodsp.utils import create_times
    from neurodsp.plts.time_series import plot_time_series
    from neurodsp.plts.rhythm import plot_lagged_coherence








.. code-block:: python


    # Set the random seed, for consistency simulating data
    np.random.seed(0)







Simulate a Signal with a Bursty Oscillation
-------------------------------------------




.. code-block:: python


    # Parameters for simulated signal
    n_samples = 5000
    fs = 1000
    burst_freq = 10
    burst_starts = [0, 3000]
    burst_seconds = 1
    burst_samples = burst_seconds*fs








.. code-block:: python


    # Design burst kernel
    burst_kernel_t = create_times(burst_seconds, fs)
    burst_kernel = 2*np.sin(burst_kernel_t*2*np.pi*burst_freq)

    # Generate random signal with bursts
    times = create_times(n_samples/fs, fs)
    sig = np.random.randn(n_samples)
    for ind in burst_starts:
        sig[ind:ind+burst_samples] += burst_kernel








.. code-block:: python


    # Plot example signal
    plot_time_series(times, sig)




.. image:: /auto_tutorials/rhythm/images/sphx_glr_plot_LaggedCoherence_001.png
    :class: sphx-glr-single-img




Compute lagged coherence for an alpha oscillation
-------------------------------------------------




.. code-block:: python


    f_range = (8, 12)
    lag_coh_alpha = compute_lagged_coherence(sig, fs, f_range)
    print('Lagged coherence = ', lag_coh_alpha)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lagged coherence =  0.7763874314234404


Compute lagged coherence across the frequency spectrum
------------------------------------------------------

Notice that lagged coherence peaks around 10Hz (the frequency of our
oscillation), but it is not very specific to that frequency.




.. code-block:: python


    lag_coh_by_f, freqs = compute_lagged_coherence(sig, fs, (1, 40), return_spectrum=True)

    # Visualize lagged coherence as a function of frequency
    plot_lagged_coherence(freqs, lag_coh_by_f)




.. image:: /auto_tutorials/rhythm/images/sphx_glr_plot_LaggedCoherence_002.png
    :class: sphx-glr-single-img




Compute lagged coherence for time segments with and without burst
-----------------------------------------------------------------

Note that lagged coherence is greater when analyzing a neural signal that has a burst in
the frequency range of interest, compared to a signal that does not have an oscillation.




.. code-block:: python


    samp_burst = np.arange(1000)
    samp_noburst = np.arange(1000, 2000)

    lag_coh_burst = compute_lagged_coherence(sig[samp_burst], fs, f_range)
    lag_coh_noburst = compute_lagged_coherence(sig[samp_noburst], fs, f_range)
    print('Lagged coherence, bursting = ', lag_coh_burst)
    print('Lagged coherence, not bursting = ', lag_coh_noburst)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lagged coherence, bursting =  0.9987945421210493
    Lagged coherence, not bursting =  0.6340581331289347


Compute lagged coherence of an example neural signal
----------------------------------------------------




.. code-block:: python


    # Load signal
    sig = np.load('../data/sample_data_1.npy')
    sig_filt_true = np.load('../data/sample_data_1_filt.npy')
    fs = 1000

    times = create_times(len(sig)/fs, fs)
    f_range = (13, 30)








.. code-block:: python


    # Plot example signal
    plot_time_series(times, sig)




.. image:: /auto_tutorials/rhythm/images/sphx_glr_plot_LaggedCoherence_003.png
    :class: sphx-glr-single-img





.. code-block:: python


    f_range = (13, 30)
    lag_coh_beta = compute_lagged_coherence(sig, fs, f_range)
    print('Lagged coherence = ', lag_coh_beta)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lagged coherence =  0.24582055225422916


Sphinx settings:
sphinx_gallery_thumbnail_number = 2



**Total running time of the script:** ( 0 minutes  0.201 seconds)


.. _sphx_glr_download_auto_tutorials_rhythm_plot_LaggedCoherence.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_LaggedCoherence.py <plot_LaggedCoherence.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_LaggedCoherence.ipynb <plot_LaggedCoherence.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
